<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kong.mapper.ItemsMapper">
  <resultMap id="BaseResultMap" type="com.kong.pojo.Items">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="item_name" jdbcType="VARCHAR" property="itemName" />
    <result column="cat_id" jdbcType="INTEGER" property="catId" />
    <result column="root_cat_id" jdbcType="INTEGER" property="rootCatId" />
    <result column="sell_counts" jdbcType="INTEGER" property="sellCounts" />
    <result column="on_off_status" jdbcType="INTEGER" property="onOffStatus" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.kong.pojo.Items">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, item_name, cat_id, root_cat_id, sell_counts, on_off_status, created_time, updated_time
  </sql>

  <!--  k：默认，代表默认排序，根据name-->
  <!--  c：根据销量排序-->
  <!--  p：根据价格排序-->
  <select id="searchItems" parameterType="Map" resultType="com.kong.pojo.vo.SearchItemsVO">
    select
        i.id as itemId, i.item_name as itemName, i.sell_counts as sellCounts,
        ii.url as imgUrl, tempSpec.price_discount as price
    from items i left join items_img ii on i.id = ii.item_id
    left join(
        select item_id, min(price_discount) as price_discount
        from items_spec group by item_id
    ) tempSpec on i.id = tempSpec.item_id
    where ii.is_main = 1
      <if test="paramsMap.keywords != null and paramsMap.keywords != '' ">
        and i.item_name like '%${paramsMap.keywords}%'
      </if>
    order by
      <choose>
        <when test="paramsMap.sort == &quot;c&quot; ">
            i.sell_counts desc
        </when>
        <when test="paramsMap.sort == &quot;p&quot; ">
            tempSpec.price_discount asc
        </when>
        <otherwise>
            i.item_name asc
        </otherwise>
      </choose>
  </select>

  <select id="searchItemsByThirdCat" parameterType="Map" resultType="com.kong.pojo.vo.SearchItemsVO">
    select
    i.id as itemId, i.item_name as itemName, i.sell_counts as sellCounts,
    ii.url as imgUrl, tempSpec.price_discount as price
    from items i left join items_img ii on i.id = ii.item_id
    left join(
    select item_id, min(price_discount) as price_discount
    from items_spec group by item_id
    ) tempSpec on i.id = tempSpec.item_id
    where ii.is_main = 1
      and i.cat_id = #{paramsMap.catId}
    order by
    <choose>
      <when test="paramsMap.sort == &quot;c&quot; ">
        i.sell_counts desc
      </when>
      <when test="paramsMap.sort == &quot;p&quot; ">
        tempSpec.price_discount asc
      </when>
      <otherwise>
        i.item_name asc
      </otherwise>
    </choose>
  </select>

  <select id="queryItemsBySpecIds" parameterType="List" resultType="com.kong.pojo.vo.ShopcartVO">
    select
        t_items.id as itemId, t_items.item_name as itemName, t_items_img.url as itemImgUrl,
        t_items_spec.id as specId, t_items_spec.name as specName,
        t_items_spec.price_discount as priceDiscount, t_items_spec.price_normal as priceNormal
    from items_spec t_items_spec
        left join items t_items on t_items.id = t_items_spec.item_id
        left join items_img t_items_img on t_items_img.item_id = t_items.id
    where t_items_img.is_main = 1
    and t_items_spec.id in
        <foreach collection="paramsList" index="index" item="specId" open="(" separator="," close=")">
            #{specId}
        </foreach>
  </select>
</mapper>